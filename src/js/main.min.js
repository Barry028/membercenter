// 瀏覽器版本偵測
function detectIE() {
    var ua = window.navigator.userAgent;

    // Test values; Uncomment to check result …

    // IE 10
    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';

    // IE 11
    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';

    // Edge 12 (Spartan)
    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';

    // Edge 13
    // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';

    var msie = ua.indexOf('MSIE ');
    if (msie > 0) {
        // IE 10 or older => return version number
        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
    }

    var trident = ua.indexOf('Trident/');
    if (trident > 0) {
        // IE 11 => return version number
        var rv = ua.indexOf('rv:');
        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
    }

    var edge = ua.indexOf('Edge/');
    if (edge > 0) {
        // Edge (IE 12+) => return version number
        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
    }

    // other browser
    return false;
}

var memberCenter = (function(window, jQuery) {
    if (!window.jQuery) {
        throw new Error("memberCenter requires jQuery")
    }
    var $ = window.jQuery;
    var _this = this;

    return {
        init: function() {
            // 若是IE，則加上class
            if (detectIE()) {
                // alert()
                $("html").addClass('ie ie' + detectIE());
            }
        },

        resumeSideFixed: function() {
            (window.pageYOffset >= sticky) ? navbar.classList.add("sticky"): navbar.classList.remove("sticky");
        },

        sideMenuOpen: function(lv1Index, lv2Index) {
            var side_item = $(".menu-list > li").eq(lv1Index);
            var list_header = side_item.find(".menu-list-header");
            var sub_list = list_header.next(".sub-menu-list");

            side_item.addClass("active open");
            list_header.find(".arrow").addClass("show");
            sub_list.slideToggle().find("li").eq(lv2Index).addClass("active");
        },

        menuChange: function(li) {
            $(li).parent("li").toggleClass("open").find("i").toggleClass("show");
        },


        noticeToast: function(txt, type, time) {
            var time = isNaN(time) ? 3E3 : time;
            var toast = document.createElement("div");
            if (type === "success") {
                toast.className = 'toast toast--info';
                toast.innerHTML = '<i class="jb-gd-success-mark" aria-hidden="true"></i> <font>' + txt +'</font>';
            } else if (type === "error") {
                toast.className = 'toast toast--error';
                toast.innerHTML = '<i class="jb-gd-failure-mark" aria-hidden="true"></i> <font>' + txt +'</font>';
            }
            document.body.appendChild(toast);
            setTimeout(function() {
                toast.style.webkitTransition =
                    "-webkit-transform .25s ease-in,opacity .25s ease-in";
                toast.style.opacity = "0";
                setTimeout(function() {
                    document.body.removeChild(toast)
                }, 500)
            }, time, type)
        },

        boxToggle: function(element, time) {
            $(element).next().slideToggle(time);
        }

    }
}(window, jQuery));

function changeLength(obj, lg) {
    var obj = $(obj);
    var len = obj.val();
    var textAreaLen = obj.next().find(".replyContent_len").text(len.length);
    var textAreaMax = obj.next().find(".replyContent_max").text(lg - len.length);
}
/**
 *  通知 | 吐司訊息
 */
var time = isNaN(time) ? 3E3 : time;

function ToastSuccess(txt, time) {
    var box = document.createElement("div");
    box.className = 'toast toast--info';
    box.innerHTML = '<i class="jb-gd-success-mark" aria-hidden="true"></i> <font>' + txt +'</font>';

    document.body.appendChild(box);
    setTimeout(function() {
        box.style.webkitTransition =
            "-webkit-transform 0.5s ease-in,opacity .5s ease-in";
        box.style.opacity = "0";
        setTimeout(function() {
            document.body.removeChild(box)
        }, 500)
    }, time)
};

function ToastError(txt, time) {
    var box = document.createElement("div");
    box.className = 'toast toast--error';
    box.innerHTML = '<i class="jb-gd-failure-mark" aria-hidden="true"></i> <font>' + txt +'</font>';

    document.body.appendChild(box);
    setTimeout(function() {
        box.style.webkitTransition =
            "-webkit-transform .5s ease-in, opacity .5s ease-in";
        box.style.opacity = "0";
        setTimeout(function() {
            document.body.removeChild(box)
        }, 500)
    }, time)
};

function openTab(evt, Name) {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(Name).style.display = "block";
    evt.currentTarget.className += " active";
};


$(function() {

    if (!HTMLCanvasElement.prototype.toBlob) {
        Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {
            value: function(callback, type, quality) {
                var canvas = this;
                setTimeout(function() {
                    var binStr = atob(canvas.toDataURL(type, quality).split(',')[1]);
                    var len = binStr.length,
                        arr = new Uint8Array(len);

                    for (var i = 0; i < len; i++) {
                        arr[i] = binStr.charCodeAt(i);
                    }

                    callback(new Blob([arr], { type: type || 'image/png' }));
                });
            }
        });
    }
    memberCenter.init();

    // Go Top
    $.backToGo.init('.js-go-to');

    $("#searchLog").on('click', function() {
        var _this = $("#searchLog")
        var searchLogCnt = $('#searchLogCnt');
        _this.toggleClass('active');

        memberCenter.boxToggle(this , 100);

        searchLogCnt.find('#searchLogColse').on('click', function() {
            searchLogCnt.slideUp(100);
            _this.removeClass('active');
        });

    });



    $("#mainMenu a.menu-list-header").click(function() {
        memberCenter.boxToggle(this, 200);
        memberCenter.menuChange(this);
    });

    var adv = $("#adv");
    if (adv.length > 0) {
        adv.owlCarousel({
            autoplay: true,
            loop: true,
            autoplayTimeout: 15000,
            autoplayHoverPause: true,
            items: 1,
            dots: true,
            animateOut: 'fadeOut',
            thumbs: true,
            thumbsPrerendered: true,
        });
    };
});


$(".edit_line").on("click", ".edit", function() {
    var editLine = $(this);
    var origin = editLine.parent().find(".edit_input");
    var text = origin.text(); //  儲存初始值
    var input = $("<input type=\"text\">");

    origin.remove(); //  移除這個節點
    input.attr("class", "edit_input").attr("value", text);
    editLine.parent().prepend(input);
    editLine.attr("onclick", "ToastSuccess('更新成功!',2000);").removeClass("edit fa-pencil-square-o").addClass("btn btn--primary btn--xs confirm").text(" 儲存");
    //  onclick="ToastError('密碼更新失敗!',2000);" 失敗
    input.focus();

}).on("click", ".confirm", function() { //  點擊儲存的操作
    var save = $(this);
    var change = save.parent().find(".edit_input"); //  找到 Input 的節點
    var value = change.val(); //  獲取修改以後的值
    var span = $("<span/>"); //  新增一個 Span

    change.remove(); //  移除這個 Input
    span.attr("class", "edit_input").text(value); //  修改它的 Class 和文本内容為用户輸入的内容
    save.parent().prepend(span);
    save.removeAttr("onclick");
    save.removeClass("btn btn--primary btn--xs confirm").addClass("edit fa-pencil-square-o").text(""); //  修改Class
}).on("click", ".edit_input", function() {
    //  直接點擊文字也可以编辑
    $(this).parent().find(".edit").click();
    //  調用上面的"編輯"點擊事件

});


var burger = $("#burger");
var main_menu = $(".side-nav");

$(burger).click(function() {
    burger.toggleClass("active");
    main_menu.toggleClass("mobile-menu");
    $(".mask-burger").toggle();
});



var strUrl = location.search;
// 取得 URL
var getPara, ParaPair;
var aryParaKey = [];
var aryParaValue = [];
if (strUrl.indexOf("?") != -1) {
    // 確認是否有 Query String
    var getSearch = strUrl.split("?");
    getPara = getSearch[1].split("&");
    // GetPara是把整串 Parameter 分開的結果
    for (i = 0; i < getPara.length; i++) {
        ParaPair = getPara[i].split("=");
        // ParaPair 是把其中一組 Parameter 的名稱跟值分開的結果
        aryParaKey.push(ParaPair[0]);
        // 存入 Parameter 名稱
        aryParaValue.push(ParaPair[1]);
        // 存入 Parameter 的值
    }
}
if (document.getElementById("opentab1")) {
    if (aryParaKey.indexOf("id") != -1) {
        var target = aryParaValue[aryParaKey.indexOf("id")]
        switch (target) {
            case 'opentab1':
                document.getElementById("opentab1").click(); //id=opentab1
                break;
            case 'opentab2':
                document.getElementById("opentab2").click(); //id=opentab2
                break;
        }
    } else {
        document.getElementById("opentab1").click(); //default
    }
}



// Checkboxs
function check_all(obj, cName) {
    var checkboxs = document.getElementsByName(cName);
    for (var i = 0; i < checkboxs.length; i++) {
        checkboxs[i].checked = obj.checked;
    }
}